// Generated by CoffeeScript 2.3.1
(function() {
  var _, bizday, moment, test;

  _ = require('lodash');

  bizday = require('../');

  moment = require('moment');

  ({test} = require('ava'));

  test('build', function(t) {
    var calendar, opts;
    opts = {
      startYear: 2018,
      endYear: 2018
    };
    // omitWeekEnd: tru
    calendar = bizday.buildCalendar(opts);
    return t.is(calendar.length, 365);
  });

  test('build omitWeekEnd', function(t) {
    var calendar, opts;
    opts = {
      startYear: 2018,
      endYear: 2018,
      omitWeekEnd: true
    };
    calendar = bizday.buildCalendar(opts);
    calendar.forEach(function(d) {
      t.true(moment(d).format('ddd') !== 'Sun');
      return t.true(moment(d).format('ddd') !== 'Sat');
    });
    t.is(calendar.length, 261);
  });

  test('bizday with format', function(t) {
    var bd;
    // Moment.js | Docs http://momentjs.com/docs/#/displaying/
    bd = new bizday('20180501', {
      format: 'L'
    });
    return t.is(bd.val(), '05/01/2018');
  });

  test('OutRangeError ', function(t) {
    var e;
    e = t.throws(function() {
      return new bizday('1901-01-01');
    });
    return t.is(e.message, 'The valid range is from 2000-01-01 to 2030-12-31');
  });

  test('add()', function(t) {
    var bd;
    bd = new bizday('20180501');
    t.is(bd.val(), '20180501');
    t.is(bd.add(), '20180502');
    t.is(bd.add(), '20180503');
    t.is(bd.add(), '20180504');
    t.is(bd.add(), '20180507');
    return t.is(bd.val(), '20180507');
  });

  test('add() OutRangeError ', function(t) {
    var bd, e;
    bd = new bizday('20301231');
    e = t.throws(function() {
      return bd.add();
    });
    return t.is(e.message, 'The valid range is from 2000-01-01 to 2030-12-31');
  });

  test('add() start is sunday', function(t) {
    var bd;
    bd = new bizday('20180506');
    t.is(bd.val(), '20180506');
    t.is(bd.add(), '20180507');
    t.is(bd.add(), '20180508');
    return t.is(bd.val(), '20180508');
  });

  test('add() start is saturday', function(t) {
    var bd;
    bd = new bizday('20180505');
    t.is(bd.val(), '20180505');
    t.is(bd.add(), '20180507');
    t.is(bd.add(), '20180508');
    return t.is(bd.val(), '20180508');
  });

  test('add(count)', function(t) {
    var bd;
    bd = new bizday('20180501');
    t.is(bd.val(), '20180501');
    t.is(bd.add(2), '20180503');
    t.is(bd.add(2), '20180507');
    return t.is(bd.val(), '20180507');
  });

  test('sub()', function(t) {
    var bd;
    bd = new bizday('20180501');
    t.is(bd.val(), '20180501');
    t.is(bd.sub(), '20180430');
    t.is(bd.sub(), '20180427');
    t.is(bd.sub(), '20180426');
    return t.is(bd.val(), '20180426');
  });

  test('sub() start date is sunday', function(t) {
    var bd;
    bd = new bizday('20151115');
    t.is(bd.val(), '20151115');
    t.is(bd.sub(), '20151113');
    t.is(bd.sub(), '20151112');
    t.is(bd.sub(), '20151111');
    return t.is(bd.val(), '20151111');
  });

  test('sub(count)', function(t) {
    var bd;
    bd = new bizday('20180501');
    t.is(bd.val(), '20180501');
    t.is(bd.sub(2), '20180427');
    t.is(bd.sub(2), '20180425');
    t.is(bd.sub(2), '20180423');
    return t.is(bd.val(), '20180423');
  });

  test('sub() OutRangeError ', function(t) {
    var bd, e;
    bd = new bizday('20000101');
    e = t.throws(function() {
      return bd.sub();
    });
    return t.is(e.message, 'The valid range is from 2000-01-01 to 2030-12-31');
  });

  test('add() with jp-holiday', function(t) {
    var bd;
    // add option key 'type' value of 'jp','jpn', 'JP', 'JPN'
    bd = new bizday('20180501', {
      type: 'jp'
    });
    t.is(bd.val(), '20180501');
    t.is(bd.add(), '20180502');
    t.is(bd.add(), '20180507');
    return t.is(bd.add(), '20180508');
  });

  test('add(count) with jp-holiday', function(t) {
    var bd;
    bd = new bizday('20180501', {
      type: 'jp'
    });
    t.is(bd.val(), '20180501');
    t.is(bd.add(2), '20180507');
    return t.is(bd.add(2), '20180509');
  });

  test('sub() with jp-holiday', function(t) {
    var bd;
    bd = new bizday('20180501', {
      type: 'JPN'
    });
    t.is(bd.val(), '20180501');
    t.is(bd.sub(), '20180427');
    t.is(bd.sub(), '20180426');
    return t.is(bd.sub(), '20180425');
  });

  test('sub(count) with jp-holiday', function(t) {
    var bd;
    bd = new bizday('20180501', {
      type: 'JPN'
    });
    t.is(bd.val(), '20180501');
    t.is(bd.sub(2), '20180426');
    t.is(bd.sub(2), '20180424');
    return t.is(bd.sub(2), '20180420');
  });

}).call(this);
