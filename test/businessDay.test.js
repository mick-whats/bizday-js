// Generated by CoffeeScript 2.3.1
(function() {
  var _, bizday, moment, test;

  _ = require('lodash-core');

  bizday = require('../');

  moment = require('../lib/moment-with-locales.min.js');

  ({test} = require('ava'));

  test('build', function(t) {
    var calendar, opts;
    opts = {
      startYear: 2018,
      endYear: 2018
    };
    // omitWeekEnd: tru
    calendar = bizday.buildCalendar(opts);
    return t.is(calendar.length, 365);
  });

  test('build omitWeekEnd', function(t) {
    var calendar, opts;
    opts = {
      startYear: 2018,
      endYear: 2018,
      omitWeekEnd: true
    };
    calendar = bizday.buildCalendar(opts);
    calendar.forEach(function(d) {
      t.true(moment(d).format('ddd') !== 'Sun');
      return t.true(moment(d).format('ddd') !== 'Sat');
    });
    t.is(calendar.length, 261);
  });

  test('bizday with format', function(t) {
    var bd;
    // Moment.js | Docs http://momentjs.com/docs/#/displaying/
    bd = new bizday('2018-05-01', {
      format: 'L'
    });
    return t.is(bd.val(), '05/01/2018');
  });

  test('OutRangeError ', function(t) {
    var e;
    e = t.throws(function() {
      return new bizday('1901-01-01');
    });
    return t.is(e.message, 'The valid range is from 2000-01-01 to 2030-12-31');
  });

  test('add()', function(t) {
    var bd;
    bd = new bizday('2018-05-01');
    t.is(bd.val(), '2018-05-01');
    t.is(bd.add(), '2018-05-02');
    t.is(bd.add(), '2018-05-03');
    t.is(bd.add(), '2018-05-04');
    t.is(bd.add(), '2018-05-07');
    return t.is(bd.val(), '2018-05-07');
  });

  test('add() OutRangeError ', function(t) {
    var bd, e;
    bd = new bizday('2030-12-31');
    e = t.throws(function() {
      return bd.add();
    });
    return t.is(e.message, 'The valid range is from 2000-01-01 to 2030-12-31');
  });

  test('add() start is sunday', function(t) {
    var bd;
    bd = new bizday('2018-05-06');
    t.is(bd.val(), '2018-05-06');
    t.is(bd.add(), '2018-05-07');
    t.is(bd.add(), '2018-05-08');
    return t.is(bd.val(), '2018-05-08');
  });

  test('add() start is saturday', function(t) {
    var bd;
    bd = new bizday('2018-05-05');
    t.is(bd.val(), '2018-05-05');
    t.is(bd.add(), '2018-05-07');
    t.is(bd.add(), '2018-05-08');
    return t.is(bd.val(), '2018-05-08');
  });

  test('add(count)', function(t) {
    var bd;
    bd = new bizday('2018-05-01');
    t.is(bd.val(), '2018-05-01');
    t.is(bd.add(2), '2018-05-03');
    t.is(bd.add(2), '2018-05-07');
    return t.is(bd.val(), '2018-05-07');
  });

  test('sub()', function(t) {
    var bd;
    bd = new bizday('2018-05-01');
    t.is(bd.val(), '2018-05-01');
    t.is(bd.sub(), '2018-04-30');
    t.is(bd.sub(), '2018-04-27');
    t.is(bd.sub(), '2018-04-26');
    return t.is(bd.val(), '2018-04-26');
  });

  test('sub() start date is sunday', function(t) {
    var bd;
    bd = new bizday('2015-11-15');
    t.is(bd.val(), '2015-11-15');
    t.is(bd.sub(), '2015-11-13');
    t.is(bd.sub(), '2015-11-12');
    t.is(bd.sub(), '2015-11-11');
    return t.is(bd.val(), '2015-11-11');
  });

  test('sub(count)', function(t) {
    var bd;
    bd = new bizday('2018-05-01');
    t.is(bd.val(), '2018-05-01');
    t.is(bd.sub(2), '2018-04-27');
    t.is(bd.sub(2), '2018-04-25');
    t.is(bd.sub(2), '2018-04-23');
    return t.is(bd.val(), '2018-04-23');
  });

  test('sub() OutRangeError ', function(t) {
    var bd, e;
    bd = new bizday('2000-01-01');
    e = t.throws(function() {
      return bd.sub();
    });
    return t.is(e.message, 'The valid range is from 2000-01-01 to 2030-12-31');
  });

  test('add() with jp-holiday', function(t) {
    var bd;
    // add option key 'type' value of 'jp','jpn', 'JP', 'JPN'
    bd = new bizday('2018-05-01', {
      type: 'jp'
    });
    t.is(bd.val(), '2018-05-01');
    t.is(bd.add(), '2018-05-02');
    t.is(bd.add(), '2018-05-07');
    return t.is(bd.add(), '2018-05-08');
  });

  test('add(count) with jp-holiday', function(t) {
    var bd;
    bd = new bizday('2018-05-01', {
      type: 'jp'
    });
    t.is(bd.val(), '2018-05-01');
    t.is(bd.add(2), '2018-05-07');
    return t.is(bd.add(2), '2018-05-09');
  });

  test('sub() with jp-holiday', function(t) {
    var bd;
    bd = new bizday('2018-05-01', {
      type: 'JPN'
    });
    t.is(bd.val(), '2018-05-01');
    t.is(bd.sub(), '2018-04-27');
    t.is(bd.sub(), '2018-04-26');
    return t.is(bd.sub(), '2018-04-25');
  });

  test('sub(count) with jp-holiday', function(t) {
    var bd;
    bd = new bizday('2018-05-01', {
      type: 'JPN'
    });
    t.is(bd.val(), '2018-05-01');
    t.is(bd.sub(2), '2018-04-26');
    t.is(bd.sub(2), '2018-04-24');
    return t.is(bd.sub(2), '2018-04-20');
  });

}).call(this);
